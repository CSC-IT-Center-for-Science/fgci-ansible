---
- hosts: localhost
  gather_facts: no
  vars:
    - heat_environment_file: "fgci-heat-params.yml"
  tasks:
    - name: ‚ÄùBuild a dual node heat stack for FGCI Ansible"
      register: heat_stack
      os_stack:
        name: "fgci-dual-stack"
        state: present
        template: "files/fgci-dual-heat-stack.yml"
        environment:
          - "{{ heat_environment_file }}"

- hosts: localhost
  gather_facts: no
  tasks:
    - name: print registered heat_stack variable when verbosity is 2
      debug: var=heat_stack verbosity=2

- hosts: localhost
  gather_facts: no
  connection: local
  tasks:
    - name: Add nodes to inventory
      add_host:
        name: "{{ item.name }}"
        groups: "{{ item.metadata.ansible_group }}"
        ansible_ssh_host: "{{ item.addresses[openstack_network_name][1].addr }}"
        ansible_ssh_user: "{{ vm_user_account }}"
      no_log: no
      with_items:
        - "{{ heat_stack.stack.outputs[0].output_value }}"
        - "{{ heat_stack.stack.outputs[1].output_value }}"
#      when: item.addresses[openstack_network_name]|length == 2

- hosts: localhost
  gather_facts: no
  tasks:
    - name: print groups in ansible inventory when verbosity is 1
      debug: var=groups verbosity=1

- hosts: localhost
  gather_facts: no
  tasks:
    - name: print hostvars when verbosity is 2
      debug: var=hostvars verbosity=3

- hosts: localhost
  gather_facts: no
  connection: local
  tasks:
    - name: Generate an inventory file
      template: src=templates/fgci_dual_inventory.j2 dest=./fgci_inventory

- hosts: localhost
  gather_facts: no
  tasks:
    - name: Wait for the FGCI second dual node to become accessible
      wait_for:
        delay: 10
        host: "{{ hostvars[groups['dual'][1]]['ansible_ssh_host'] }}"
        port: 22
        state: started
