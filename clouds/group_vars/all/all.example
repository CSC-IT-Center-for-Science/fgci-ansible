---

siteName: io
intDomain: int
siteDomain: fgci.csc.fi
nodeBase: io

# install slurm 16.05 instead of 15.08 (role default)
fgci_slurmrepo_version: "fgcislurm1605"

# Virtual Organization Name - Do not change the following line if your cluster is running in FGCI!!
# If you have changed it, re-set it to the string bellow and reconfigure your grid node ASAP.
voName: "fgi.csc.fi" 

# gocDBName should be set for the same name as your site is registered in gocdb.egi.eu
gocDBName: "CSC"

instSiteURL: "http://www.csc.fi"
infoSysAdminDomain: "csc.fi"
resource_location: "Espoo, Finland"
resource_latitude: "60.18"
resource_longitude: "24.83"

ext_gateway: "86.50.166.1"
ext_net_addr: "86.50.166.0"
ext_net_mask: "255.255.255.0"

# also define int_ip_addr
int_ip_addr: "{{ ansible_default_ipv4['address'] }}"
#int_net_addr: "192.168.36.0"
int_net_addr: "{{ hostvars[groups['install'][0]]['ansible_default_ipv4']['network'] }}"
#int_net_mask: "255.255.255.0"
int_net_mask: "{{ hostvars[groups['install'][0]]['ansible_default_ipv4']['netmask'] }}"
#int_gateway: "192.168.36.1"
int_gateway: "{{ hostvars[groups['install'][0]]['ansible_default_ipv4']['gateway'] }}"
#internal_net: "192.168.36.0/24"
internal_net: "{{ hostvars[groups['install'][0]]['ansible_default_ipv4']['network'] }}/24"

ib_net_mask: "255.255.0.0"

dns_resolv_search: "{{ intDomain }}.{{ siteDomain }}"
nameserver1: "{{ nameserver3 }}"
nameserver2: "193.166.4.24"
nameserver3: "193.166.4.25"

dhcp_common_domain: "{{ intDomain }}.{{ siteDomain }}"

enable_ext_nic: "yes"
enable_int_nic: "yes"

infiniband_available: False

# NFS mounts

#nfs_mount_addr: "10.2.1.5"
#nfs_mounts:
# - { fstype: "nfs4", name: "/scratch", src: "{{ nfs_mount_addr }}:/scratch" }
# - { fstype: "nfs4", name: "/home", src: "{{ nfs_mount_addr }}:/home", state: "mounted", opts: "defaults" }
#
repo_location: "http://www.nic.funet.fi/pub/mirrors/centos.org/7/os/x86_64/"
repos:
  - { name: "EPEL", url: "http://www.nic.funet.fi/pub/mirrors/fedora.redhat.com/pub/epel/7/x86_64", pkgname: "epel-release" }
  - { name: "EL Repo", url: "http://elrepo.org/linux/elrepo/el7/x86_64", pkgname: "elrepo-release" }

hyper: "{{siteName}}-admin.{{siteDomain}}"
bastion_host: "{{siteName}}-admin.{{siteDomain}}"
http_proxy: "http://install_node:3128"
env_virt_install: { http_proxy: "{{ http_proxy }}" }
libvirt_pool_name: "vms"
libvirt_pool_type: "dir"
libvirt_pool_path: "/var/{{ libvirt_pool_name }}"
# The @ for UDP. @@ for TCP
central_log_host: "@{{siteName}}-admin"

# DEVSYS  - to change later
vm_mem: "16000"
vm_cpus: "4"

# Ferm - firewall
# Ordering is important. This rule is a default and is added early in the iptables rules.
ferm_rules:
 05_ssh:
 - chain: INPUT
   domains: [ip, ip6]
   rules:
     - {rule: "policy DROP;",  comment: "global policy"}
     - {rule: "mod state state INVALID DROP;", comment: "connection tracking: drop"}
     - {rule: "mod state state (ESTABLISHED RELATED) ACCEPT;", comment: "connection tracking"}
     - {rule: "interface lo ACCEPT;", comment: "allow local packet"}
     - {rule: "proto icmp ACCEPT;", comment: "respond to ping"}
     - {rule: "proto tcp dport (22) saddr ( {{ trusted_public_networks }} {{ trusted_public_ipv6_networks }} )mod comment comment 'SSH' ACCEPT;", comment: "SSH"}
     - {rule: "interface {{ internal_interface }} mod comment comment 'Allow all internal' ACCEPT;", comment: "internal"}
     - {rule: "interface ( ib0 ib1 ) mod comment comment 'Allow all internal ib traffic' ACCEPT;", comment: "internal"}
 - chain: OUTPUT
   domains:
     - ip
     - ip6
   rules:
     - rule: "policy ACCEPT;"
       comment: global policy
 - chain: FORWARD
   domains: [ip, ip6]
   rules:
     - rule: "policy DROP;"
       comment: global policy
     - rule: "mod state state INVALID DROP;"
       comment: "connection tracking: drop"
     - rule: "mod state state (ESTABLISHED RELATED) ACCEPT;"
       comment: "connection tracking"
 
# CVMFS - if fgci_install is set to False it does not install the CVMFS configs from FGCI repo
fgci_install: True
# set cms_site and we create /etc/cvmfs/config.d/cms.cern.ch.local
# cms_site: "T2_FI_HIP"

# E-mail aliases
aliases:
 - { user: "root", alias: "{{ adminMailAddr }}" }

# SSHD
# Default in CentOS7 is that GSSAPICleanupCredentials is "no". https://bugzilla.redhat.com/show_bug.cgi?id=1055016
sshd:
 GSSAPICleanupCredentials: "no"
 PermitRootLogin: "without-password"

#NTP
ntp_config_server: [ 0.fi.pool.ntp.org, 1.fi.pool.ntp.org, 2.fi.pool.ntp.org, 3.fi.pool.ntp.org, ntp2.funet.fi, ntp4.funet.fi]
#Chrony
chrony_ntp_servers: "{{ ntp_config_server }}"
chrony_pkg_state: "installed"
chrony_pkg_update_cache: "no"
chrony_remove_ntp: True
# We make chronyd not act as a server by default by not allowing any subnets
chrony_allow_deny:
  - ""


#Users
adminremove_passwords: True

#Flowdock
# set flowdock_token: "TOKEN" to prevent sending flowdock messages to #fgci
flowdock_token: 22a225c10814863ea809b80940d25b0e
flowdock_from_address: "cPouta-fgci-csc-test-cluster"

#Collectd
collectd_tsdb_writer: True
collectd_tsdb_host: cassini.fgci.csc.fi
collectd_tsdb_tags: "site={{ siteName }}"
collectd_network_listener: False
collectd_network_server: False
collectd_plugin_packages:
 - collectd-write_tsdb

kickstart_server_ip: "install_node"
pull_install_ip: "{{ kickstart_server_ip }}"

#NIS
nis_domain: "fgci.csc.fi"
nis_server_address: "{{ kickstart_server_ip }}"

#ansible-pull is disabled here by default. Enabled per group
ansible_pull_kickstart: false
# Random max delay in seconds
ansible_pull_sleep: 600
# Defaults to "0 */2 * * *" - every second hour
ansible_pull_cron_minute_interval: "0"
ansible_pull_cron_hour_interval: "*/2"
# This is the branch of fgci-ansible repo in github.
ansible_pull_branch: "devel"
# Set the ansible_pull_cron_state to absent to disable the ansible-pull cronjob
ansible_pull_cron_state: present
# Store ansible-pull logs longer than just the last run
ansible_pull_log: True
ansible_pull_logrotate: True
ansible_pull_logrotate_interval: daily
ansible_pull_logrotate_rotate: 16

# Only install these on the admin node
dell_install_helper_scripts: False

# Define your SMTP server here
postfix_relayhost: "smtp.csc.fi"
postfix_mydomain: "{{ siteDomain }}"

slurm_compute_nodes: "compute[1]"
slurm_compute_threadspercore: "1"
slurm_ExtraParamsList:
        - "# Extra Slurm parameter *uncommented* lines go here"
        - "# Check ansible-role-slurm defaults file for examples"

#yum cron defaults to daily and hourly updating of everything 
daily_update_level: "default"
daily_download_updates: yes
daily_apply_updates: yes
hourly_update_level: "default"

#with ansible-role-users after v1.6.2 one can specify bootstrap user
bootstrap_user: "cloud-user"
